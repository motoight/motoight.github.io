<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>a people wondering</title>
    <link href="/2020/06/15/a-people-wondering/"/>
    <url>/2020/06/15/a-people-wondering/</url>
    
    <content type="html"><![CDATA[<h3 id="2020-06-15"><a href="#2020-06-15" class="headerlink" title="2020.06.15"></a>2020.06.15</h3><p>其实我是很痛恨做这件事情的，因为这对帮助现实没有任何好处，只是一种无病呻吟罢了。</p><p>不过其实现在最应该做的事情就是好好的做好手头上的事情，我知道你现在可能有很多很多的想法，有想法就去做，而不是躺着。</p><p>去奋斗，去努力，去努力让自己精彩。</p><p>现在有很多人纠结着选择的重要性，但是却没有付出汗水，你曾经那样做，但是现在你不想了。</p><p>虽然做出这个决定，你有一些小遗憾，还有点想得寸进尺，但是这于现实无益。</p><p>就这样吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>diary</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>面试记录——阿里钉钉</title>
    <link href="/2020/04/18/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95%E2%80%94%E2%80%94%E9%98%BF%E9%87%8C%E9%92%89%E9%92%89/"/>
    <url>/2020/04/18/%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95%E2%80%94%E2%80%94%E9%98%BF%E9%87%8C%E9%92%89%E9%92%89/</url>
    
    <content type="html"><![CDATA[<h2 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h2><p>在上一周的时间里，我经历了人生中的第一次的工作面试，下面介绍一下个人的基本情况。</p><ul><li>哈尔滨工业大学， 大三， 计算机科学与技术</li><li>学分绩 10%</li><li>无项目无科研</li><li>面试岗位：java开发工程师</li></ul><p>其实在这次春招的过程当中我是犹豫的，主要的原因是我明白自己和大学中专攻技术的大牛比起来，自己挥霍了大部分的时间在虚度青春，无所事事。我映像之中感觉自己好像没有什么拿的出手的东西。因为这些原因，非常犹豫，害怕自己的菜，导致对方面试官对我们学校的整体映像不好。<br>不过最后还是选择尝试。任何的害怕和犹豫其实都是不必要的，即使这次失败，也可以给你带来一些东西，让你明白自己欠缺的东西和前进的方向。<br><strong>真正有勇气的人，我以为，是敢于面对自己所有的不足，并且有决心去改变。</strong></p><h2 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h2><p>这次笔试感觉不难，一道常规题，一道最短路。但是我刚上来就把第一题的题目理解错了。幸运的拿到了面试，真的是面试官给面子吧。</p><h2 id="第一次面试"><a href="#第一次面试" class="headerlink" title="第一次面试"></a>第一次面试</h2><ul><li>首先自我介绍</li><li>两道笔试题，在阿里内部伯乐代码系统手敲给面试官看<ul><li>一道求数组连续的子数组之和等于目标值<ul><li>当时用的滑动窗口，勉强写完。面试官给出了前缀和的提示，傻乎乎的没反应过来。</li></ul></li><li>一道二叉树层序遍历<ul><li>没啥难度，常规题</li></ul></li></ul></li><li>进程线程区别</li><li>java中的集合类</li><li>java中弱引用</li><li>java中线程安全的集合类，如何实现</li><li>给出java中Collection接口的结构图</li><li>数据库中事务的类型</li></ul><h2 id="第二次面试"><a href="#第二次面试" class="headerlink" title="第二次面试"></a>第二次面试</h2><ul><li>简单自述想读研还是读书</li><li>为什么要实现虚拟内存，如何实现，虚拟内存的换页算法（选取哪个页换出）</li><li>事务隔离的等级</li><li>$concurrentHashMap$ 有什么好处<ul><li>回答： 对多$segment$加锁</li><li>问： 此时如何求$size$</li><li>傻了。。。 </li></ul></li><li>一致性 $hash$ 算法</li><li>分布式数据库中的一些算法（忘了）</li><li>算法题<ul><li>行列递增的数组$(m*n)$，查找给定值<ul><li>我给出的是剪枝，选取$(m/2,n/2)$。 面试官问如何代码实现（三次递归调用？）</li><li>给出上述算法复杂度分析，怼主定理</li></ul></li><li>给定数组，要求排序结果是数组中所有奇数在左边，偶数在右边，要求时间复杂度$O(n)$,空间复杂度$O(1)$,即不可以使用辅助内存。<ul><li>我给出类似于快排，头尾指针，两个奇数，头指针++；两个偶数，尾指针++；一奇一偶，可跳过可交换（看出现顺序）。</li></ul></li></ul></li><li>手敲代码，伯乐系统<ul><li>求给定数组，求其中三个元素之和， 要求与给定值 $target$ 最接近, 返回该值</li><li>固定其中一个，头尾指针 $O(n^2)$</li></ul></li></ul><h2 id="第三次面试"><a href="#第三次面试" class="headerlink" title="第三次面试"></a>第三次面试</h2><p>这次的电话来的比较突然，但是我正好有空，所以就做了一个快速的电话面试。</p><ul><li>首先做了自我介绍，询问了考研和工作的意向</li><li>根据简历，主要询问了项目经验<ul><li>遗憾的是个人觉得我的项目没啥好说的</li><li>虽然面的是java研发岗位，但是感觉面试官在乎的是个人对于项目的理解和做项目的目的，追着一个深度学习的项目问了半天</li></ul></li><li>询问的数据库的范式种类和判定 方法</li><li>记不得了 。。。</li></ul><h2 id="第四次面试"><a href="#第四次面试" class="headerlink" title="第四次面试"></a>第四次面试</h2><p>这次面试的面试官似乎是阿里资深技术专家，不知道是什么评级，但是隐隐感觉好像是小部门主管，如果有机会入职，感觉就是实习期的boss。</p><ul><li>一道逻辑题，感觉像是思维的warm up</li><li>询问了一个实际的开发场景，编辑器打开大文件的时候如何处理，对比记事本和IDEA打开大文件的表现。如果你来做，你会怎么做这个开发设计，如何安排线程。</li><li>一个atoi函数，询问了函数参数中base的限制，原因。</li><li>最后让编码实现atoi函数，以API的方式。</li></ul><p>最后面试官给我的评价是：我还是很聪明的，对于他提示的点都能够很快的get。如果没有研究的欲望，可以考虑工作，积累工作经验。<br>哈哈哈哈！开心！</p><h2 id="第五次面试"><a href="#第五次面试" class="headerlink" title="第五次面试"></a>第五次面试</h2><p>第五次面试是交叉面，应该是最后一轮技术面试，但是个人感觉回答的不好，崩了。</p><ul><li>自我介绍，对未来技术的思考，个人发展道路的思考</li><li>询问了许多基础的知识，计算机网络，算法题，java，项目。都很基础，可以说难度不大，但是需要对自己做过得，使用过的工具要熟悉，不能浮在表层的使用。</li><li>最后得知面试官是05级的工大学长，09年去深圳读研。学长和我分享了自己的经验，同时给了我宝贵的建议：    <ul><li><strong>工大的环境还是很闭塞的，应该努力多去外面看一看</strong></li><li><strong>学校里的学习是一方面，但是还是应该对未来多思考，多点亮自己的技能树，多做技术的积累，不要关注别人的成就，走自己的路。</strong></li></ul></li></ul><h2 id="hr面试"><a href="#hr面试" class="headerlink" title="hr面试"></a>hr面试</h2><p>终于来到的hr面试，本来以为hr面非常容易，但是最后没想到还是停在了这一步。</p><p>我感觉这里hr更关注你对于技术的关注程度和自己平时在项目中的积累。面试官询问了我平时一般从那些渠道来追踪最新的技术，有哪些常浏览的网站和技术平台么。</p><p>同时还询问了我的项目经历。</p><p>以上。</p><ul><li>hr是一个头型锃亮的帅气中年男人，感觉有点点严肃。</li><li>最终还是停在了这一步，有点点遗憾。</li></ul><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><ul><li>收获很多，面试官人都很好，感觉啥都懂。面对我的菜，也都包容了，没有不耐烦。</li><li>感觉不要害怕自己暂时的菜，要对自己充满信心。</li><li>不要害怕丢人，不懂就问，努力搞懂，获取知识的重要性远远大于因为顾忌面子而患得患失。</li><li>继续努力，随时更新。</li><li><strong>Be open-minded and helpful all the time！</strong></li></ul><h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><p><a href="https://www.cnblogs.com/qianguyihao/p/4810168.html" target="_blank" rel="noopener">Java虚拟机详解</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>面试</tag>
      
      <tag>Dingtalk</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HMM算法</title>
    <link href="/2020/04/07/HMM%E7%AE%97%E6%B3%95/"/>
    <url>/2020/04/07/HMM%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>这里只做一些简单的实现。</p><pre><code class="python"># veterbi 算法import numpy as np&#39;&#39;&#39;       rainy, sunnyrainy   0.7  0.3sunny   0.4   0.6&#39;&#39;&#39;a = [[0.7,0.3],     [0.4,0.6]]a = np.array(a)&#39;&#39;&#39;      0     1     2      walk shop cleanrainy 0.1  0.4   0.5sunny 0.6  0.3   0.1&#39;&#39;&#39;b = [[0.1,0.4,0.5],     [0.6,0.3,0.1]]b = np.array(b)# 观察序列o = [0,1,2]dict = {     0:&quot;rainy&quot;,     1:&quot;sunny&quot;}# 初始概率pi = [0.6,0.4]# 概率矩阵p, p[t][i] 表示 观察到前t个状态且处于状态i的最大概率# p = T*N T为观测序列长度，N为状态个数p = np.zeros((len(o),len(pi)))path = np.zeros((len(o),len(pi)),dtype=int)for t in range(len(o)):     for i in range(len(pi)):          if t==0:               #初始化过程               p[t][i] = pi[i]*b[i][o[t]]               path[t][i] = i          else:               # 保存最大的概率值所有转到状态i的最大概率值               p[t][i] = np.max(p[t-1,:]*a[:,i]*b[i][o[t]])               # 存储转到状态i的状态j               path[t][i] = np.argmax(p[t-1,:]*a[:,i]*b[i][o[t]])index = np.argmax(p[-1,:])max_prob = max(p[-1,:])likely_path = []# 回溯得到可能的路径for i in range(len(o)-1,-1,-1):     if i==len(o)-1:          index = np.argmax(p[-1,:])          likely_path.append(index)     else:          # path i时刻中存储的是i-1时刻转入当前状态的最大的状态j          index = path[i+1][index]          likely_path.append(index)print(max_prob)print(likely_path)print([dict[i] for i in list(reversed(likely_path))])</code></pre><p>Ref<br>[HMM与分词、词性标注、命名实体识别] <a href="https://www.hankcs.com/nlp/hmm-and-segmentation-tagging-named-entity-recognition.html" target="_blank" rel="noopener">https://www.hankcs.com/nlp/hmm-and-segmentation-tagging-named-entity-recognition.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>HMM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>模式识别-特征提取</title>
    <link href="/2020/03/27/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB-%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/"/>
    <url>/2020/03/27/%E6%A8%A1%E5%BC%8F%E8%AF%86%E5%88%AB-%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h3 id="PCA-入门"><a href="#PCA-入门" class="headerlink" title="PCA 入门"></a>PCA 入门</h3><p><strong>纸上得来终觉浅，绝知此事要躬行</strong></p><p>PCA算法作为经典的降维算法，是机器学习和模式识别入门的基础。网上关于PCA算法的讲解已经非常细致了。虽然我还是一个入门小白，但是我隐约感觉到，机器学习某种程度上颇有种了哲学中殊途同归的味道————以PCA算法为例，无论是从最大化方差的角度，还是最小化平方误差的角度，都能推得出相同的结论。<br>其他的比如：如何给出曲线拟合中最经典的MSE，在概率中也有很多中方式去理解他。<br>更一般的，似乎从概率图模型的角度，很多模型都能够被其统一的表示，但是这一块我也没有过多的了解，就先谈这么多吧。</p><p>讲解的blog网上到处都是，所以我的目的就是用python，实际动手来操作一下，明白公式推导中的每一步，实际上表示在图中是什么含义。</p><h4 id="从最小化平方误差的角度"><a href="#从最小化平方误差的角度" class="headerlink" title="从最小化平方误差的角度"></a>从最小化平方误差的角度</h4><p>哈工大金野老师的PPT上的思路主要是从样本数据的表达维数上由简至繁的思路来的：</p><p>样本矩阵 $S_{n*l}$ —— $n$个样本，每个样本 $l$ 维</p><ul><li>样本均值 $m$：样本的零维表达<ul><li>简单，但不能反映样本间的差异</li></ul></li><li>一维表达<ul><li>将这些样本，映射到过 $m$ 的一条直线上使误差最小</li><li>选取散布矩阵 $S_w$ 的最大特征值方向作为直线方向投影</li></ul></li><li>$d$ 维表达<ul><li>将样本从$l$维空间映射到$d$维空间表达</li><li>选取散布矩阵的前 $d$ 个最大的特征向量，作为转换矩阵 $W_{l*d}$</li><li>$$ S_{n<em>l}</em>W_{l<em>d} = S^, _{n</em>d} $$  样本矩阵从 $l$ 维度降成 $d$ 维度</li></ul></li></ul><p>以一道例题来体验一下</p><img src = "https://i.loli.net/2020/03/27/lRps9fIc61hiLXy.png"  width = "70%" height = "70%" align = center><div align = center><img src = "https://i.loli.net/2020/03/27/Rm3DXpVc8TnAsxJ.png"  width = "50%" height = "50%" > <br/>投影图</div><pre><code class="python">import numpy as npimport matplotlib.pyplot as pltsample = [[10,1],          [9,0],          [10,-1],          [11,0],          [0,9],          [1,10],          [0,11],          [-1,10]]sample = [[2,0],          [2,1],          [3,0],          [4,2],          [3,2],          [4,1]]sample = np.array(sample)# 求样本均值mean = np.mean(sample,axis=0)#归一化s = sample - mean#求散布矩阵 即各维度之前的关系矩阵st = np.transpose(s)S = np.dot(st,s)#求散布矩阵特征值eig,v = np.linalg.eig(S)#找到最大的一个特征值作为直线的方向向量index = np.argmax(eig)vec = v[index]#计算投影值，即样本点在直线上距离均值点m的距离#经过归一化后实际上简化为到源点的距离after_projection = np.array(np.dot(s,vec))# 直线的格式 ax+by = 0 ,求斜率，写出直线方程tanc = vec[0]/vec[1]# 计算投影点的位置dots = after_projection.reshape((-1,1))*vec# 显示归一化后点坐标plt.scatter(s[:,0],s[:,1],marker=&#39;*&#39;)# 显示投影点坐标plt.scatter(dots[:,0],dots[:,1],marker=&#39;*&#39;,edgecolors=&#39;r&#39;)# 显示直线 注意numpy函数是左闭右开x = np.arange(np.min(s[:,0]),np.max(s[:,0] + 1))print(max(s[:,0]))plt.plot(x,tanc*x)plt.show()</code></pre><ul><li>PCA 进阶 —— kernel方法， KPCA<ul><li>《模式分析的核方法》6.2节</li><li>¨<strong>利用核函数，将原始特征“映射到高维空间中”进行PCA，从而实现非线性降维</strong></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>PCA</tag>
      
      <tag>FDA</tag>
      
      <tag>KPCA</tag>
      
      <tag>python</tag>
      
      <tag>machine learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/2020/03/13/hello-hexo/"/>
    <url>/2020/03/13/hello-hexo/</url>
    
    <content type="html"><![CDATA[<h3 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h3><ul><li><p>网站配置：Github Page + Hexo + Fluid + SM.MS + Picgo</p></li><li><p>静态网页托管到github上，比租用阿里云服务器更加便宜和放心</p></li><li><p>Hexo部署网页更加容易，只需要下载Node.js，用npm命令安装即可</p></li><li><p>Fluid是我在网上看到的比较中意的主题，以后看腻了再换。<br>  如何换主题：</p><ol><li>将新主题下载到theme</li><li>在根目录的_config.yml配置文件中修改主题即可</li></ol></li><li><p>Blog中的插图一直是一个比较头疼的问题，好看的图片太大，之前用的阿里云虽说内存够，但是Wordpress用起来太麻烦，还总是崩。参考了好多网页，最终选择了Picgo+SM.MS组合。<a href="https://sm.ms/" target="_blank" rel="noopener">smms</a> 是一个免费的图床，注册用户可以免费试用高达5G的云空间，配合Picgo使用非常的优雅顺滑。当然，氪金玩家还可以选择付费服务。</p></li><li><p>这次网站配置一共花了大半天的时间，还有很多需要完善的地方，比如：</p><ol><li>博客的摘要，跳转，代码高亮</li><li>评论</li><li>在线聊天</li><li>latex公式</li><li>…</li></ol></li></ul><p>以后有空接着完善，顺便接触一下前段的内容。</p><center> **TO BE CONTINUED** </center><h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul><li><a href="http://xianbai.me/learn-md/index.html" target="_blank" rel="noopener">Markdown 入门</a></li><li><a href="https://www.jianshu.com/p/0b257de21eb5" target="_blank" rel="noopener">Markdown 进阶</a></li><li><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97" target="_blank" rel="noopener">Fluid 配置说明</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Github Page</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>SM.MS</tag>
      
      <tag>Picgo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/03/13/hello-world/"/>
    <url>/2020/03/13/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
